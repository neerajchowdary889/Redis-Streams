// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: redis_streams.proto

package redisstreamspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PublishRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Topic string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// oneof payload
	Text          string            `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	BytesData     []byte            `protobuf:"bytes,3,opt,name=bytes_data,json=bytesData,proto3" json:"bytes_data,omitempty"`
	Json          *structpb.Struct  `protobuf:"bytes,4,opt,name=json,proto3" json:"json,omitempty"`
	Headers       map[string]string `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	mi := &file_redis_streams_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_redis_streams_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_redis_streams_proto_rawDescGZIP(), []int{0}
}

func (x *PublishRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *PublishRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PublishRequest) GetBytesData() []byte {
	if x != nil {
		return x.BytesData
	}
	return nil
}

func (x *PublishRequest) GetJson() *structpb.Struct {
	if x != nil {
		return x.Json
	}
	return nil
}

func (x *PublishRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type PublishResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishResponse) Reset() {
	*x = PublishResponse{}
	mi := &file_redis_streams_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResponse) ProtoMessage() {}

func (x *PublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_redis_streams_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResponse.ProtoReflect.Descriptor instead.
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return file_redis_streams_proto_rawDescGZIP(), []int{1}
}

func (x *PublishResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type BatchMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`         // optional, "*" for auto
	Fields        *structpb.Struct       `protobuf:"bytes,3,opt,name=fields,proto3" json:"fields,omitempty"` // raw fields to XADD
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchMessage) Reset() {
	*x = BatchMessage{}
	mi := &file_redis_streams_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchMessage) ProtoMessage() {}

func (x *BatchMessage) ProtoReflect() protoreflect.Message {
	mi := &file_redis_streams_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchMessage.ProtoReflect.Descriptor instead.
func (*BatchMessage) Descriptor() ([]byte, []int) {
	return file_redis_streams_proto_rawDescGZIP(), []int{2}
}

func (x *BatchMessage) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *BatchMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BatchMessage) GetFields() *structpb.Struct {
	if x != nil {
		return x.Fields
	}
	return nil
}

type PublishBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*BatchMessage        `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishBatchRequest) Reset() {
	*x = PublishBatchRequest{}
	mi := &file_redis_streams_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishBatchRequest) ProtoMessage() {}

func (x *PublishBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_redis_streams_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishBatchRequest.ProtoReflect.Descriptor instead.
func (*PublishBatchRequest) Descriptor() ([]byte, []int) {
	return file_redis_streams_proto_rawDescGZIP(), []int{3}
}

func (x *PublishBatchRequest) GetMessages() []*BatchMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type PublishBatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishBatchResponse) Reset() {
	*x = PublishBatchResponse{}
	mi := &file_redis_streams_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishBatchResponse) ProtoMessage() {}

func (x *PublishBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_redis_streams_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishBatchResponse.ProtoReflect.Descriptor instead.
func (*PublishBatchResponse) Descriptor() ([]byte, []int) {
	return file_redis_streams_proto_rawDescGZIP(), []int{4}
}

type SubscribeRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Topic             string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	ConsumerName      string                 `protobuf:"bytes,2,opt,name=consumer_name,json=consumerName,proto3" json:"consumer_name,omitempty"`
	BatchSize         int64                  `protobuf:"varint,3,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	BlockTimeoutMs    int64                  `protobuf:"varint,4,opt,name=block_timeout_ms,json=blockTimeoutMs,proto3" json:"block_timeout_ms,omitempty"`
	ConsumerTimeoutMs int64                  `protobuf:"varint,5,opt,name=consumer_timeout_ms,json=consumerTimeoutMs,proto3" json:"consumer_timeout_ms,omitempty"`
	AutoAck           bool                   `protobuf:"varint,6,opt,name=auto_ack,json=autoAck,proto3" json:"auto_ack,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_redis_streams_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_redis_streams_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_redis_streams_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SubscribeRequest) GetConsumerName() string {
	if x != nil {
		return x.ConsumerName
	}
	return ""
}

func (x *SubscribeRequest) GetBatchSize() int64 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *SubscribeRequest) GetBlockTimeoutMs() int64 {
	if x != nil {
		return x.BlockTimeoutMs
	}
	return 0
}

func (x *SubscribeRequest) GetConsumerTimeoutMs() int64 {
	if x != nil {
		return x.ConsumerTimeoutMs
	}
	return 0
}

func (x *SubscribeRequest) GetAutoAck() bool {
	if x != nil {
		return x.AutoAck
	}
	return false
}

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Fields        *structpb.Struct       `protobuf:"bytes,3,opt,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_redis_streams_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_redis_streams_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_redis_streams_proto_rawDescGZIP(), []int{6}
}

func (x *Message) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetFields() *structpb.Struct {
	if x != nil {
		return x.Fields
	}
	return nil
}

type AckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	ConsumerGroup string                 `protobuf:"bytes,2,opt,name=consumer_group,json=consumerGroup,proto3" json:"consumer_group,omitempty"` // optional; default group from topic
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckRequest) Reset() {
	*x = AckRequest{}
	mi := &file_redis_streams_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckRequest) ProtoMessage() {}

func (x *AckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_redis_streams_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckRequest.ProtoReflect.Descriptor instead.
func (*AckRequest) Descriptor() ([]byte, []int) {
	return file_redis_streams_proto_rawDescGZIP(), []int{7}
}

func (x *AckRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *AckRequest) GetConsumerGroup() string {
	if x != nil {
		return x.ConsumerGroup
	}
	return ""
}

func (x *AckRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckResponse) Reset() {
	*x = AckResponse{}
	mi := &file_redis_streams_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckResponse) ProtoMessage() {}

func (x *AckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_redis_streams_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckResponse.ProtoReflect.Descriptor instead.
func (*AckResponse) Descriptor() ([]byte, []int) {
	return file_redis_streams_proto_rawDescGZIP(), []int{8}
}

type ListTopicsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTopicsRequest) Reset() {
	*x = ListTopicsRequest{}
	mi := &file_redis_streams_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTopicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicsRequest) ProtoMessage() {}

func (x *ListTopicsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_redis_streams_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicsRequest.ProtoReflect.Descriptor instead.
func (*ListTopicsRequest) Descriptor() ([]byte, []int) {
	return file_redis_streams_proto_rawDescGZIP(), []int{9}
}

type ListTopicsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Names         []string               `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTopicsResponse) Reset() {
	*x = ListTopicsResponse{}
	mi := &file_redis_streams_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTopicsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicsResponse) ProtoMessage() {}

func (x *ListTopicsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_redis_streams_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicsResponse.ProtoReflect.Descriptor instead.
func (*ListTopicsResponse) Descriptor() ([]byte, []int) {
	return file_redis_streams_proto_rawDescGZIP(), []int{10}
}

func (x *ListTopicsResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

var File_redis_streams_proto protoreflect.FileDescriptor

const file_redis_streams_proto_rawDesc = "" +
	"\n" +
	"\x13redis_streams.proto\x12\x0eredisstreamspb\x1a\x1cgoogle/protobuf/struct.proto\"\x89\x02\n" +
	"\x0ePublishRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x1d\n" +
	"\n" +
	"bytes_data\x18\x03 \x01(\fR\tbytesData\x12+\n" +
	"\x04json\x18\x04 \x01(\v2\x17.google.protobuf.StructR\x04json\x12E\n" +
	"\aheaders\x18\x05 \x03(\v2+.redisstreamspb.PublishRequest.HeadersEntryR\aheaders\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"!\n" +
	"\x0fPublishResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"e\n" +
	"\fBatchMessage\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12/\n" +
	"\x06fields\x18\x03 \x01(\v2\x17.google.protobuf.StructR\x06fields\"O\n" +
	"\x13PublishBatchRequest\x128\n" +
	"\bmessages\x18\x01 \x03(\v2\x1c.redisstreamspb.BatchMessageR\bmessages\"\x16\n" +
	"\x14PublishBatchResponse\"\xe1\x01\n" +
	"\x10SubscribeRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12#\n" +
	"\rconsumer_name\x18\x02 \x01(\tR\fconsumerName\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x03 \x01(\x03R\tbatchSize\x12(\n" +
	"\x10block_timeout_ms\x18\x04 \x01(\x03R\x0eblockTimeoutMs\x12.\n" +
	"\x13consumer_timeout_ms\x18\x05 \x01(\x03R\x11consumerTimeoutMs\x12\x19\n" +
	"\bauto_ack\x18\x06 \x01(\bR\aautoAck\"`\n" +
	"\aMessage\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12/\n" +
	"\x06fields\x18\x03 \x01(\v2\x17.google.protobuf.StructR\x06fields\"Y\n" +
	"\n" +
	"AckRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12%\n" +
	"\x0econsumer_group\x18\x02 \x01(\tR\rconsumerGroup\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\"\r\n" +
	"\vAckResponse\"\x13\n" +
	"\x11ListTopicsRequest\"*\n" +
	"\x12ListTopicsResponse\x12\x14\n" +
	"\x05names\x18\x01 \x03(\tR\x05names2\x94\x03\n" +
	"\fRedisStreams\x12J\n" +
	"\aPublish\x12\x1e.redisstreamspb.PublishRequest\x1a\x1f.redisstreamspb.PublishResponse\x12Y\n" +
	"\fPublishBatch\x12#.redisstreamspb.PublishBatchRequest\x1a$.redisstreamspb.PublishBatchResponse\x12H\n" +
	"\tSubscribe\x12 .redisstreamspb.SubscribeRequest\x1a\x17.redisstreamspb.Message0\x01\x12>\n" +
	"\x03Ack\x12\x1a.redisstreamspb.AckRequest\x1a\x1b.redisstreamspb.AckResponse\x12S\n" +
	"\n" +
	"ListTopics\x12!.redisstreamspb.ListTopicsRequest\x1a\".redisstreamspb.ListTopicsResponseB'Z%RedisStreams/api/proto;redisstreamspbb\x06proto3"

var (
	file_redis_streams_proto_rawDescOnce sync.Once
	file_redis_streams_proto_rawDescData []byte
)

func file_redis_streams_proto_rawDescGZIP() []byte {
	file_redis_streams_proto_rawDescOnce.Do(func() {
		file_redis_streams_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_redis_streams_proto_rawDesc), len(file_redis_streams_proto_rawDesc)))
	})
	return file_redis_streams_proto_rawDescData
}

var file_redis_streams_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_redis_streams_proto_goTypes = []any{
	(*PublishRequest)(nil),       // 0: redisstreamspb.PublishRequest
	(*PublishResponse)(nil),      // 1: redisstreamspb.PublishResponse
	(*BatchMessage)(nil),         // 2: redisstreamspb.BatchMessage
	(*PublishBatchRequest)(nil),  // 3: redisstreamspb.PublishBatchRequest
	(*PublishBatchResponse)(nil), // 4: redisstreamspb.PublishBatchResponse
	(*SubscribeRequest)(nil),     // 5: redisstreamspb.SubscribeRequest
	(*Message)(nil),              // 6: redisstreamspb.Message
	(*AckRequest)(nil),           // 7: redisstreamspb.AckRequest
	(*AckResponse)(nil),          // 8: redisstreamspb.AckResponse
	(*ListTopicsRequest)(nil),    // 9: redisstreamspb.ListTopicsRequest
	(*ListTopicsResponse)(nil),   // 10: redisstreamspb.ListTopicsResponse
	nil,                          // 11: redisstreamspb.PublishRequest.HeadersEntry
	(*structpb.Struct)(nil),      // 12: google.protobuf.Struct
}
var file_redis_streams_proto_depIdxs = []int32{
	12, // 0: redisstreamspb.PublishRequest.json:type_name -> google.protobuf.Struct
	11, // 1: redisstreamspb.PublishRequest.headers:type_name -> redisstreamspb.PublishRequest.HeadersEntry
	12, // 2: redisstreamspb.BatchMessage.fields:type_name -> google.protobuf.Struct
	2,  // 3: redisstreamspb.PublishBatchRequest.messages:type_name -> redisstreamspb.BatchMessage
	12, // 4: redisstreamspb.Message.fields:type_name -> google.protobuf.Struct
	0,  // 5: redisstreamspb.RedisStreams.Publish:input_type -> redisstreamspb.PublishRequest
	3,  // 6: redisstreamspb.RedisStreams.PublishBatch:input_type -> redisstreamspb.PublishBatchRequest
	5,  // 7: redisstreamspb.RedisStreams.Subscribe:input_type -> redisstreamspb.SubscribeRequest
	7,  // 8: redisstreamspb.RedisStreams.Ack:input_type -> redisstreamspb.AckRequest
	9,  // 9: redisstreamspb.RedisStreams.ListTopics:input_type -> redisstreamspb.ListTopicsRequest
	1,  // 10: redisstreamspb.RedisStreams.Publish:output_type -> redisstreamspb.PublishResponse
	4,  // 11: redisstreamspb.RedisStreams.PublishBatch:output_type -> redisstreamspb.PublishBatchResponse
	6,  // 12: redisstreamspb.RedisStreams.Subscribe:output_type -> redisstreamspb.Message
	8,  // 13: redisstreamspb.RedisStreams.Ack:output_type -> redisstreamspb.AckResponse
	10, // 14: redisstreamspb.RedisStreams.ListTopics:output_type -> redisstreamspb.ListTopicsResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_redis_streams_proto_init() }
func file_redis_streams_proto_init() {
	if File_redis_streams_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_redis_streams_proto_rawDesc), len(file_redis_streams_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_redis_streams_proto_goTypes,
		DependencyIndexes: file_redis_streams_proto_depIdxs,
		MessageInfos:      file_redis_streams_proto_msgTypes,
	}.Build()
	File_redis_streams_proto = out.File
	file_redis_streams_proto_goTypes = nil
	file_redis_streams_proto_depIdxs = nil
}
